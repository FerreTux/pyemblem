---
###########################
###########################
## Linter GitHub Actions ##
###########################
###########################
name: Lint Code Base

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

###############
# Set the Job #
###############
jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  linting:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest
    needs: check_date
    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        if: ${{ needs.check_date.outputs.should_run != 'false' }}
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          VALIDATE_PYTHON_PYLINT: True
          VALIDATE_PYTHON_FLAKE8: True
          VALIDATE_PYTHON_ISORT: True
          VALIDATE_PYTHON_MYPY: True
          VALIDATE_MARKDOWN: True
          VALIDATE_JSON: True
          VALIDATE_YAML: True
          DEFAULT_BRANCH: Master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}